# import * from "./prisma.graphql"

scalar DateTime

type Query {
  # Users
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User!]!
  user(where: UserWhereUniqueInput!): User!
  me: User!
}

type Mutation {
  # Users
  login(email: String!, password: String!): AuthPayload!
  register(name: String!, email: String!, password: String!): AuthPayload!
  forgotPassword(email: String!): Boolean!
  resetPassword(token: String!, new_password: String!): Boolean!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteUser(where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!
  deleteManyUsers(where: UserWhereInput!): BatchPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  name: String!
  email: String!
  email_verified: Boolean!

  createdAt: DateTime!
  updatedAt: DateTime!
}
